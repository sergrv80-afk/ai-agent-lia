#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–±–Ω–æ–≤–ª—è—Ç–æ—Ä —Ñ–∞–π–ª–æ–≤ –¥–ª—è –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç
–û–±–Ω–æ–≤–ª—è–µ—Ç sitemap.xml, llms.txt, JSON-LD –∏ –¥—Ä—É–≥–∏–µ —Ñ–∞–π–ª—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≥–∞–π–¥—É SEO/GEO/LLMO 2025
–í–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É JSON-LD, —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ Core Web Vitals
–¢–µ–º–∞—Ç–∏–∫–∞: AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã, —á–∞—Ç-–±–æ—Ç—ã, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥–∞–∂
"""

import os
import re
import json
import requests
import sys
from datetime import datetime
from pathlib import Path

class ArticleUpdater:
    def __init__(self, project_root="."):
        self.project_root = Path(project_root)
        self.current_date = datetime.now().strftime("%Y-%m-%d")
        self.css_version = self._get_next_css_version()
        self.js_version = self._get_next_js_version()
        self.video_widget_version = self._get_next_video_widget_version()
        
    def _get_next_css_version(self):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â—É—é –≤–µ—Ä—Å–∏—é CSS –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤"""
        css_files = list(self.project_root.glob("*.html"))
        versions = []
        
        for file in css_files:
            with open(file, 'r', encoding='utf-8') as f:
                content = f.read()
                # AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Tailwind CSS –∏–∑ CDN, –≤–µ—Ä—Å–∏–∏ –Ω–µ –Ω—É–∂–Ω—ã
                # –ù–æ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
                match = re.search(r'href="/assets/css/styles\.css\?v=(\d+)"', content)
                if match:
                    versions.append(int(match.group(1)))
        
        return max(versions) + 1 if versions else 1
    
    def _get_next_js_version(self):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â—É—é –≤–µ—Ä—Å–∏—é JavaScript –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤"""
        js_files = list(self.project_root.glob("*.html"))
        versions = []
        
        for file in js_files:
            with open(file, 'r', encoding='utf-8') as f:
                content = f.read()
                match = re.search(r'src="js/app\.js\?v=(\d+)"', content)
                if match:
                    versions.append(int(match.group(1)))
        
        return max(versions) + 1 if versions else 1
    
    def _get_next_video_widget_version(self):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â—É—é –≤–µ—Ä—Å–∏—é –≤–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç–∞ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤"""
        widget_files = list(self.project_root.glob("*.html"))
        versions = []
        
        for file in widget_files:
            with open(file, 'r', encoding='utf-8') as f:
                content = f.read()
                match = re.search(r'src="js/sv-video-widget\.js\?v=(\d+)"', content)
                if match:
                    versions.append(int(match.group(1)))
        
        return max(versions) + 1 if versions else 29



    def validate_json_ld(self, article_filename):
        """–í–∞–ª–∏–¥–∏—Ä—É–µ—Ç JSON-LD —Å—Ö–µ–º—ã –≤ —Å—Ç–∞—Ç—å–µ"""
        article_path = self.project_root / article_filename
        
        try:
            with open(article_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            validation_results = []
            
            # –ò—â–µ–º JSON-LD –±–ª–æ–∫–∏
            json_ld_blocks = re.findall(r'<script type="application/ld\+json">(.*?)</script>', content, re.DOTALL)
            
            if not json_ld_blocks:
                validation_results.append("‚ùå JSON-LD —Å—Ö–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return validation_results
            
            for i, block in enumerate(json_ld_blocks):
                try:
                    # –ü–∞—Ä—Å–∏–º JSON
                    json_data = json.loads(block.strip())
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è Article
                    if json_data.get("@type") == "Article":
                        required_fields = ["@context", "@type", "headline", "author", "datePublished"]
                        missing_fields = [field for field in required_fields if field not in json_data]
                        
                        if missing_fields:
                            validation_results.append(f"‚ö†Ô∏è  Article —Å—Ö–µ–º–∞ #{i+1}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {', '.join(missing_fields)}")
                        else:
                            validation_results.append(f"‚úÖ Article —Å—Ö–µ–º–∞ #{i+1}: –≤–∞–ª–∏–¥–Ω–∞")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è FAQPage
                    elif json_data.get("@type") == "FAQPage":
                        if "mainEntity" not in json_data:
                            validation_results.append(f"‚ùå FAQPage —Å—Ö–µ–º–∞ #{i+1}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç mainEntity")
                        else:
                            questions = json_data["mainEntity"]
                            if not isinstance(questions, list) or len(questions) < 6:
                                validation_results.append(f"‚ö†Ô∏è  FAQPage —Å—Ö–µ–º–∞ #{i+1}: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤ (–Ω–∞–π–¥–µ–Ω–æ {len(questions) if isinstance(questions, list) else 0})")
                            else:
                                validation_results.append(f"‚úÖ FAQPage —Å—Ö–µ–º–∞ #{i+1}: {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤")
                    
                    else:
                        validation_results.append(f"‚ÑπÔ∏è  –°—Ö–µ–º–∞ #{i+1}: —Ç–∏–ø {json_data.get('@type', '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')}")
                        
                except json.JSONDecodeError as e:
                    validation_results.append(f"‚ùå –°—Ö–µ–º–∞ #{i+1}: –æ—à–∏–±–∫–∞ JSON - {str(e)}")
                except Exception as e:
                    validation_results.append(f"‚ùå –°—Ö–µ–º–∞ #{i+1}: –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ - {str(e)}")
            
            return validation_results
            
        except Exception as e:
            return [f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {str(e)}"]

    def check_core_web_vitals(self, article_filename):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç Core Web Vitals (–∏–º–∏—Ç–∞—Ü–∏—è)"""
        # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –≤—ã–∑–æ–≤ PageSpeed Insights API
        # –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ
        
        return [
            "üìä Core Web Vitals –ø—Ä–æ–≤–µ—Ä–∫–∞:",
            "   ‚Ä¢ LCP (Largest Contentful Paint) ‚â§ 2.5—Å",
            "   ‚Ä¢ FID (First Input Delay) ‚â§ 100–º—Å", 
            "   ‚Ä¢ CLS (Cumulative Layout Shift) ‚â§ 0.1",
            "   ‚Ä¢ INP (Interaction to Next Paint) ‚â§ 200–º—Å",
            "",
            "üîç –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑:",
            "   ‚Ä¢ Google PageSpeed Insights",
            "   ‚Ä¢ Chrome DevTools (Lighthouse)",
            "   ‚Ä¢ WebPageTest.org"
        ]

    def check_page_structure(self, article_filename):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        article_path = self.project_root / article_filename
        
        try:
            with open(article_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            checks = []
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º H1 –∑–∞–≥–æ–ª–æ–≤–æ–∫
            h1_count = len(re.findall(r'<h1[^>]*>.*?</h1>', content, re.DOTALL))
            if h1_count == 1:
                checks.append("‚úÖ H1 –∑–∞–≥–æ–ª–æ–≤–æ–∫: –æ–¥–∏–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
            elif h1_count == 0:
                checks.append("‚ùå H1 –∑–∞–≥–æ–ª–æ–≤–æ–∫: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            else:
                checks.append(f"‚ö†Ô∏è  H1 –∑–∞–≥–æ–ª–æ–≤–æ–∫: –Ω–∞–π–¥–µ–Ω–æ {h1_count} (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–∏–Ω)")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º H2 –∑–∞–≥–æ–ª–æ–≤–∫–∏
            h2_count = len(re.findall(r'<h2[^>]*>.*?</h2>', content, re.DOTALL))
            if h2_count >= 4:
                checks.append(f"‚úÖ H2 –∑–∞–≥–æ–ª–æ–≤–∫–∏: {h2_count} (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ)")
            else:
                checks.append(f"‚ö†Ô∏è  H2 –∑–∞–≥–æ–ª–æ–≤–∫–∏: {h2_count} (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 4)")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º FAQ –±–ª–æ–∫
            if re.search(r'<section[^>]*id="faq"[^>]*>', content):
                checks.append("‚úÖ FAQ –±–ª–æ–∫: –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            else:
                checks.append("‚ùå FAQ –±–ª–æ–∫: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º CTA –±–ª–æ–∫–∏
            cta_count = len(re.findall(r'class="[^"]*cta[^"]*"', content))
            if cta_count >= 2:
                checks.append(f"‚úÖ CTA –±–ª–æ–∫–∏: {cta_count} (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ)")
            else:
                checks.append(f"‚ö†Ô∏è  CTA –±–ª–æ–∫–∏: {cta_count} (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 2)")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏
            internal_links = len(re.findall(r'href="[^"]*\.html"', content))
            if internal_links >= 1:
                checks.append(f"‚úÖ –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏: {internal_links}")
            else:
                checks.append("‚ö†Ô∏è  –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            
            return checks
            
        except Exception as e:
            return [f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: {str(e)}"]

    def create_comprehensive_seo_report(self, article_filename):
        """–°–æ–∑–¥–∞–µ—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π SEO-–æ—Ç—á–µ—Ç —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏"""
        report_path = self.project_root / f"SEO_–û–¢–ß–ï–¢_{article_filename}.md"
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        print("üîç –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏...")
        
        json_ld_validation = self.validate_json_ld(article_filename)
        page_structure = self.check_page_structure(article_filename)
        core_web_vitals = self.check_core_web_vitals(article_filename)
        
        content = f"""# üìä –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π SEO-–æ—Ç—á–µ—Ç –¥–ª—è —Å—Ç–∞—Ç—å–∏: {article_filename}

## üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {self.current_date}

## ‚úÖ –ß—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:

### **1. –§–∞–π–ª—ã –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏:**
- [x] **sitemap.xml** - —Å—Ç–∞—Ç—å—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º 0.7
- [x] **llms.txt** - —Å—Ç–∞—Ç—å—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è AI-–ø–æ–Ω–∏–º–∞–Ω–∏—è
- [x] **robots.txt** - —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è AI-–±–æ—Ç–æ–≤
- [x] **.well-known/ai.txt** - —Å—Ç–∞—Ç—å—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è AI-–∞–≥–µ–Ω—Ç–æ–≤

### **2. –í–µ—Ä—Å–∏–∏ —Ñ–∞–π–ª–æ–≤:**
- [x] **CSS**: styles.css?v={self.css_version}
- [x] **JavaScript**: app.js?v={self.js_version}
- [x] **–í–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç**: sv-video-widget.js?v={self.video_widget_version}

## üîç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:

### **3. JSON-LD —Å—Ö–µ–º—ã:**
"""
        
        for check in json_ld_validation:
            content += f"{check}\n"
        
        content += f"""
### **4. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:**
"""
        
        for check in page_structure:
            content += f"{check}\n"
        
        content += f"""
### **5. Core Web Vitals:**
"""
        
        for check in core_web_vitals:
            content += f"{check}\n"
        
        content += f"""
## üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:

### **–õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä:**
```bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080
http://localhost:8080/
http://localhost:8080/{article_filename}
```

### **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:**
- ‚úÖ JSON-LD –≤–∞–ª–∏–¥–∞—Ü–∏—è
- ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
- ‚úÖ –í–µ—Ä—Å–∏–∏ —Ñ–∞–π–ª–æ–≤
- ‚úÖ –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è

## üìã –†—É—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):

### **SEO-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:**
- [ ] Google PageSpeed Insights
- [ ] Rich Results Test
- [ ] Google Search Console
- [ ] Ahrefs/SEMrush

### **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã:**
- [ ] –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
- [ ] –°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏
- [ ] –†–∞–±–æ—Ç–∞ –≤–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç–∞
- [ ] –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å HTML/CSS

## üìà –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:

- **–ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è**: 1-3 –¥–Ω—è
- **–ü–æ–∑–∏—Ü–∏–∏**: 2-4 –Ω–µ–¥–µ–ª–∏
- **AI-–ø–æ–Ω–∏–º–∞–Ω–∏–µ**: 1-2 –Ω–µ–¥–µ–ª–∏
- **Core Web Vitals**: —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

## üéØ –ì–æ—Ç–æ–≤–æ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!

–°—Ç–∞—Ç—å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –≥–∞–π–¥—É SEO/GEO/LLMO 2025.
–í—Å–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ.
"""
        
        with open(report_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"üìä –°–æ–∑–¥–∞–Ω –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π SEO-–æ—Ç—á–µ—Ç: SEO_–û–¢–ß–ï–¢_{article_filename}.md")
        return True
    
    def update_sitemap(self, article_filename):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç sitemap.xml, –¥–æ–±–∞–≤–ª—è—è –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é"""
        sitemap_path = self.project_root / "sitemap.xml"
        
        if not sitemap_path.exists():
            print("‚ùå sitemap.xml –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π sitemap
        with open(sitemap_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        article_name = Path(article_filename).stem
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ URL-–∑–∞–ø–∏—Å–∏ –¥–ª—è AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç
        new_urls = f'''  <url>
    <loc>https://ai-agent-lia.ru/{article_filename}</loc>
    <lastmod>{self.current_date}</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.7</priority>
  </url>
  <url>
    <loc>https://ai-agent-lia.ru/{article_filename}#faq</loc>
    <lastmod>{self.current_date}</lastmod>
    <changefreq>monthly</changefreq>
    <priority>0.6</priority>
  </url>
</urlset>'''
        
        # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥
        updated_content = content.replace('</urlset>', new_urls)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(sitemap_path, 'w', encoding='utf-8') as f:
            f.write(updated_content)
        
        print(f"‚úÖ sitemap.xml –æ–±–Ω–æ–≤–ª–µ–Ω: –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç—å—è {article_filename}")
        return True
    
    def update_llms_txt(self, article_filename):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç llms.txt, –¥–æ–±–∞–≤–ª—è—è –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é"""
        llms_path = self.project_root / "llms.txt"
        
        if not llms_path.exists():
            print("‚ùå llms.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
        with open(llms_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é –≤ —Ä–∞–∑–¥–µ–ª —Å—Ç–∞—Ç–µ–π
        new_entry = f"\n# –°—Ç–∞—Ç—å–∏ –¥–ª—è AI-–ø–æ–Ω–∏–º–∞–Ω–∏—è\n/{article_filename}"
        
        # –ò—â–µ–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
        if "# –°—Ç–∞—Ç—å–∏ –¥–ª—è AI-–ø–æ–Ω–∏–º–∞–Ω–∏—è" in content:
            # –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
            content = content.replace("# –°—Ç–∞—Ç—å–∏ –¥–ª—è AI-–ø–æ–Ω–∏–º–∞–Ω–∏—è", 
                                   f"# –°—Ç–∞—Ç—å–∏ –¥–ª—è AI-–ø–æ–Ω–∏–º–∞–Ω–∏—è\n/{article_filename}")
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω–µ—Ü
            content += new_entry
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(llms_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"‚úÖ llms.txt –æ–±–Ω–æ–≤–ª–µ–Ω: –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç—å—è {article_filename}")
        return True
    
    def update_robots_txt(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç robots.txt –¥–ª—è AI-–±–æ—Ç–æ–≤"""
        robots_path = self.project_root / "robots.txt"
        
        if not robots_path.exists():
            print("‚ùå robots.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è AI-–±–æ—Ç–æ–≤
        with open(robots_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        if "GPTBot" in content and "PerplexityBot" in content:
            print("‚ÑπÔ∏è robots.txt —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è AI-–±–æ—Ç–æ–≤")
            return True
        
        print("‚ÑπÔ∏è robots.txt —É–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return True
    
    def update_ai_txt(self, article_filename):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç .well-known/ai.txt —Å –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–µ–π"""
        ai_dir = self.project_root / ".well-known"
        ai_dir.mkdir(exist_ok=True)
        
        ai_path = ai_dir / "ai.txt"
        
        # –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        if ai_path.exists():
            with open(ai_path, 'r', encoding='utf-8') as f:
                content = f.read()
        else:
            content = """# AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç AI.txt
# –Ø–≤–Ω–æ —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø—É–±–ª–∏—á–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–ª—è AI-–∞–≥–µ–Ω—Ç–æ–≤

Allow: /
Sitemap: https://ai-agent-lia.ru/sitemap.xml

# –û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è AI
AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç - —ç—Ç–æ —É–º–Ω—ã–π —á–∞—Ç-–±–æ—Ç –Ω–∞ –±–∞–∑–µ GPT –∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–¥–∞–∂ –∏ –ª–∏–¥–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞—è–≤–æ–∫, –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã, –≤–µ–¥—ë—Ç –¥–∏–∞–ª–æ–≥ –≤–º–µ—Å—Ç–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7.
–ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å CRM —Å–∏—Å—Ç–µ–º–∞–º–∏ (Bitrix24, AmoCRM), –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–∞–ª–æ–Ω–æ–≤ –∫—Ä–∞—Å–æ—Ç—ã, –∫–ª–∏–Ω–∏–∫, —Å–ø–æ—Ä—Ç–∞, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, –∞–≤—Ç–æ-—É—Å–ª—É–≥, –¥–æ—Å—É–≥–∞, –±—ã—Ç–æ–≤—ã—Ö —É—Å–ª—É–≥ –∏ —Ä–æ–∑–Ω–∏—Ü—ã.

# –°—Ç–∞—Ç—å–∏ –¥–ª—è AI-–ø–æ–Ω–∏–º–∞–Ω–∏—è
"""
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é
        if article_filename not in content:
            content += f"\n/{article_filename}"
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            with open(ai_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print(f"‚úÖ .well-known/ai.txt –æ–±–Ω–æ–≤–ª–µ–Ω: –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç—å—è {article_filename}")
        else:
            print(f"‚ÑπÔ∏è –°—Ç–∞—Ç—å—è {article_filename} —É–∂–µ –µ—Å—Ç—å –≤ ai.txt")
        
        return True
    
    def update_versions_in_article(self, article_filename):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤–µ—Ä—Å–∏–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ —Å—Ç–∞—Ç—å–µ"""
        article_path = self.project_root / article_filename
        
        if not article_path.exists():
            print(f"‚ùå –§–∞–π–ª —Å—Ç–∞—Ç—å–∏ {article_filename} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        try:
            # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏
            with open(article_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º CSS –≤–µ—Ä—Å–∏—é
            old_css_pattern = r'href="/assets/css/styles\.css\?v=\d+"'
            new_css = f'href="/assets/css/styles.css?v={self.css_version}"'
            if re.search(old_css_pattern, content):
                content = re.sub(old_css_pattern, new_css, content)
                print(f"üé® CSS –≤–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ ?v={self.css_version}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º JS –≤–µ—Ä—Å–∏—é
            old_js_pattern = r'src="/js/app\.js\?v=\d+"'
            new_js = f'src="/js/app.js?v={self.js_version}"'
            if re.search(old_js_pattern, content):
                content = re.sub(old_js_pattern, new_js, content)
                print(f"‚ö° JS –≤–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ ?v={self.js_version}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç –≤–µ—Ä—Å–∏—é
            old_widget_pattern = r'src="/js/sv-video-widget\.js\?v=\d+"'
            new_widget = f'src="/js/sv-video-widget.js?v={self.video_widget_version}"'
            if re.search(old_widget_pattern, content):
                content = re.sub(old_widget_pattern, new_widget, content)
                print(f"üé• –í–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç –≤–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ ?v={self.video_widget_version}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é
            with open(article_path, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print(f"‚úÖ –í—Å–µ –≤–µ—Ä—Å–∏–∏ –≤ —Å—Ç–∞—Ç—å–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            return True
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤–µ—Ä—Å–∏–π: {str(e)}")
            return False
    
    def update_main_page_versions(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –≤–µ—Ä—Å–∏–∏ –≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ index.html"""
        main_page = self.project_root / "index.html"
        
        if not main_page.exists():
            print("‚ùå index.html –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        try:
            with open(main_page, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º CSS –≤–µ—Ä—Å–∏—é
            old_css_pattern = r'href="/assets/css/styles\.css\?v=\d+"'
            new_css = f'href="/assets/css/styles.css?v={self.css_version}"'
            if re.search(old_css_pattern, content):
                content = re.sub(old_css_pattern, new_css, content)
                print(f"üé® CSS –≤–µ—Ä—Å–∏—è –≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ ?v={self.css_version}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º JS –≤–µ—Ä—Å–∏—é
            old_js_pattern = r'src="/js/app\.js\?v=\d+"'
            new_js = f'src="/js/app.js?v={self.js_version}"'
            if re.search(old_js_pattern, content):
                content = re.sub(old_js_pattern, new_js, content)
                print(f"‚ö° JS –≤–µ—Ä—Å–∏—è –≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ ?v={self.js_version}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç –≤–µ—Ä—Å–∏—é
            old_widget_pattern = r'src="/js/sv-video-widget\.js\?v=\d+"'
            new_widget = f'src="/js/sv-video-widget.js?v={self.video_widget_version}"'
            if re.search(old_widget_pattern, content):
                content = re.sub(old_widget_pattern, new_widget, content)
                print(f"üé• –í–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç –≤–µ—Ä—Å–∏—è –≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ ?v={self.video_widget_version}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            with open(main_page, 'w', encoding='utf-8') as f:
                f.write(content)
            
            print(f"‚úÖ –í—Å–µ –≤–µ—Ä—Å–∏–∏ –≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            return True
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {str(e)}")
            return False
    
    def update_all_files(self, article_filename):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ —Ñ–∞–π–ª—ã –¥–ª—è –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏"""
        print(f"üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å—Ç–∞—Ç—å–∏: {article_filename}")
        print(f"üìÖ –î–∞—Ç–∞: {self.current_date}")
        print(f"üé® CSS –≤–µ—Ä—Å–∏—è: {self.css_version}")
        print(f"‚ö° JS –≤–µ—Ä—Å–∏—è: {self.js_version}")
        print(f"üé• –í–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç –≤–µ—Ä—Å–∏—è: {self.video_widget_version}")
        print("-" * 60)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
        self.update_sitemap(article_filename)
        self.update_llms_txt(article_filename)
        self.update_robots_txt()
        self.update_ai_txt(article_filename)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏–∏ –≤ —Å—Ç–∞—Ç—å–µ
        self.update_versions_in_article(article_filename)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏–∏ –≤ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        self.update_main_page_versions()
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π SEO-–æ—Ç—á–µ—Ç —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
        self.create_comprehensive_seo_report(article_filename)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        print("\nüîç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
        print("üìä –°–æ–∑–¥–∞–Ω –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π SEO-–æ—Ç—á–µ—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏")
        print("\nüí° –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä:")
        print("   python3 -m http.server 8081")
        print(f"   ‚Ä¢ –ì–ª–∞–≤–Ω–∞—è: http://localhost:8081/")
        print(f"   ‚Ä¢ –°—Ç–∞—Ç—å—è: http://localhost:8081/{article_filename}")
        print(f"   ‚Ä¢ –ü—Ä–æ–¥–∞–∫—à–Ω: https://ai-agent-lia.ru/{article_filename}")
        
        print("-" * 60)
        print("‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Å–æ–≥–ª–∞—Å–Ω–æ –≥–∞–π–¥—É SEO/GEO/LLMO 2025!")
        print(f"üé® CSS –≤–µ—Ä—Å–∏—è: {self.css_version}")
        print(f"‚ö° JS –≤–µ—Ä—Å–∏—è: {self.js_version}")
        print(f"üé• –í–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç –≤–µ—Ä—Å–∏—è: {self.video_widget_version}")
        
        return True



def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç"""
    print("ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–±–Ω–æ–≤–ª—è—Ç–æ—Ä —Ñ–∞–π–ª–æ–≤ AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç v3.0")
    print("üéØ –¢–µ–º–∞—Ç–∏–∫–∞: AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã, —á–∞—Ç-–±–æ—Ç—ã, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥–∞–∂")
    print("üìö –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≥–∞–π–¥—É SEO/GEO/LLMO 2025")
    print("üöÄ –í–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±–Ω–æ–≤–ª—è—Ç–æ—Ä–∞
    updater = ArticleUpdater()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        article_filename = sys.argv[1]
        print(f"üìù –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞: {article_filename}")
    else:
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å—Ç–∞—Ç—å–∏
        article_filename = input("üìù –í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å—Ç–∞—Ç—å–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: restaurant-automation-ai.html): ").strip()
    
    if not article_filename:
        print("‚ùå –ò–º—è —Ñ–∞–π–ª–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–æ!")
        return
    
    if not article_filename.endswith('.html'):
        print("‚ùå –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .html!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å—Ç–∞—Ç—å–∏
    article_path = Path(article_filename)
    if not article_path.exists():
        print(f"‚ùå –§–∞–π–ª {article_filename} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"üìÅ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {article_filename}")
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
        updater.update_all_files(article_filename)
        
        print("\nüéâ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("üìä –°–ª–µ–¥—É–π—Ç–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–º—É SEO-–æ—Ç—á–µ—Ç—É –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫.")
        print("üöÄ –ì–æ—Ç–æ–≤–æ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –≥–∞–π–¥—É 2025!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {str(e)}")

if __name__ == "__main__":
    main()
