#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å—Ç–∞—Ç–µ–π AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç
–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—å–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç, —á–∏—Ç–∞—è —Ç–µ–º—ã –∏–∑ CSV —Ñ–∞–π–ª–∞
–¢–µ–º–∞—Ç–∏–∫–∞: AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã, —á–∞—Ç-–±–æ—Ç—ã, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥–∞–∂
–ë–∞–∑–∞ —Ç–µ–º: 1,700 —Ç–µ–º (100 –±–∞–∑–æ–≤—ã—Ö + 1,600 —Å –≥–æ—Ä–æ–¥–∞–º–∏)
"""

import csv
import time
import json
import os
from datetime import datetime
from pathlib import Path
from article_agent import ArticleAgent

class AutoArticleGenerator:
    def __init__(self):
        self.csv_file = "ai_business_3themes.csv"  # –¢–µ–ø–µ—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç 1,700 —Ç–µ–º (100 –±–∞–∑–æ–≤—ã—Ö + 1,600 —Å –≥–æ—Ä–æ–¥–∞–º–∏)
        self.progress_file = "ai_topic_progress.json"
        self.log_file = "ai_generation_log.txt"
        self.article_agent = ArticleAgent()
        self.current_topic_index = 0
        self.topics = []
        
    def load_topics_from_csv(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ–º—ã –∏–∑ CSV —Ñ–∞–π–ª–∞"""
        try:
            with open(self.csv_file, 'r', encoding='utf-8') as file:
                reader = csv.reader(file)
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                next(reader)
                self.topics = [row[0] for row in reader if row[0].strip()]
            
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(self.topics)} —Ç–µ–º –∏–∑ CSV —Ñ–∞–π–ª–∞")
            for i, topic in enumerate(self.topics):
                print(f"   {i+1}. {topic}")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CSV: {e}")
            return False
    
    def load_progress(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            if os.path.exists(self.progress_file):
                with open(self.progress_file, 'r', encoding='utf-8') as f:
                    data = json.load(f)
                    self.current_topic_index = data.get('current_index', 0)
                    print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–æ–≥—Ä–µ—Å—Å: —Ç–µ–º–∞ {self.current_topic_index + 1}")
            else:
                self.current_topic_index = 0
                print("üÜï –ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–π —Ç–µ–º—ã")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")
            self.current_topic_index = 0
    
    def save_progress(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å"""
        try:
            progress_data = {
                'current_index': self.current_topic_index,
                'last_updated': datetime.now().isoformat(),
                'total_topics': len(self.topics)
            }
            with open(self.progress_file, 'w', encoding='utf-8') as f:
                json.dump(progress_data, f, ensure_ascii=False, indent=2)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")
    
    def log_generation(self, topic, status, details=""):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        log_entry = f"[{timestamp}] {status}: {topic}"
        if details:
            log_entry += f" - {details}"
        
        try:
            with open(self.log_file, 'a', encoding='utf-8') as f:
                f.write(log_entry + "\n")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞: {e}")
        
        print(log_entry)
    
    def get_next_topic(self):
        """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â—É—é —Ç–µ–º—É –ø–æ –∫—Ä—É–≥—É"""
        if not self.topics:
            return None
        
        topic = self.topics[self.current_topic_index]
        print(f"üéØ –¢–µ–∫—É—â–∞—è —Ç–µ–º–∞ ({self.current_topic_index + 1}/{len(self.topics)}): {topic}")
        return topic
    
    def generate_article(self, topic):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—å—é –ø–æ —Ç–µ–º–µ"""
        try:
            print(f"üöÄ –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å—Ç–∞—Ç—å–∏ –ø–æ —Ç–µ–º–µ: {topic}")
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ç—å—é —á–µ—Ä–µ–∑ article_agent
            result = self.article_agent.create_article_by_topic(topic)
            
            if result.get("success"):
                filename = result.get("filename", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                self.log_generation(topic, "‚úÖ –£–°–ü–ï–•", f"–§–∞–π–ª: {filename}")
                return True
            else:
                error = result.get("error", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
                self.log_generation(topic, "‚ùå –û–®–ò–ë–ö–ê", error)
                return False
                
        except Exception as e:
            self.log_generation(topic, "‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï", str(e))
            return False
    
    def run_auto_generation(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è cron –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)"""
        print("ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ì–ï–ù–ï–†–ê–¢–û–† –°–¢–ê–¢–ï–ô AI-–ê–°–°–ò–°–¢–ï–ù–¢ –ó–ê–ü–£–©–ï–ù")
        print("üéØ –¢–µ–º–∞—Ç–∏–∫–∞: AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã, —á–∞—Ç-–±–æ—Ç—ã, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥–∞–∂")
        print("=" * 50)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–º—ã
        if not self.load_topics_from_csv():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–º—ã. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
            return
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        self.load_progress()
        
        print(f"üìö –í—Å–µ–≥–æ —Ç–µ–º: {len(self.topics)}")
        print("=" * 50)
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ç–µ–º—É
            topic = self.get_next_topic()
            if not topic:
                print("‚ùå –ù–µ—Ç —Ç–µ–º –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
                return
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞—Ç—å—é
            success = self.generate_article(topic)
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π —Ç–µ–º–µ
            self.current_topic_index = (self.current_topic_index + 1) % len(self.topics)
            self.save_progress()
            
            if success:
                print(f"‚úÖ –°—Ç–∞—Ç—å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞! –°–ª–µ–¥—É—é—â–∞—è —Ç–µ–º–∞: {self.current_topic_index + 1}")
            else:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
            
            print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. Cron –∑–∞–ø—É—Å—Ç–∏—Ç —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç.")
                
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            self.save_progress()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å—Ç–∞—Ç–µ–π –¥–ª—è AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç")
    print("üìÅ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞:", os.getcwd())
    print("üìã CSV —Ñ–∞–π–ª:", "ai_business_3themes.csv")
    print("=" * 50)
    
    generator = AutoArticleGenerator()
    generator.run_auto_generation()

if __name__ == "__main__":
    main()
