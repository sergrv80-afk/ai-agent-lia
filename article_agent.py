#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import re
import json
import requests
from pathlib import Path
from datetime import datetime
from typing import Dict, List, Tuple, Optional
import openai
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(override=True)

class ArticleAgent:
    def __init__(self):
        self.project_root = Path(__file__).parent
        # –ß–∏—Ç–∞–µ–º API –∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        self.api_key = os.getenv("OPENAI_API_KEY")
        if not self.api_key:
            raise ValueError("‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env")
        
        self.client = openai.OpenAI(api_key=self.api_key)
        self.MODEL = "gpt-5-mini"

        # AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç: –∏—Å–ø–æ–ª—å–∑—É–µ–º gpt-5-mini –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π
        # self.MODEL = "gpt-5"  # –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ gpt-5

        # Responses API: –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ –¥–ª–∏–Ω—É –≤—ã–≤–æ–¥–∞
        # self.max_output_tokens = None  # —É–±–∏—Ä–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ

        self.article_template = self._load_article_template()

    def _load_article_template(self):
        p = self.project_root / "AI_ARTICLE_TEMPLATE.html"
        if p.exists():
            template = p.read_text(encoding="utf-8")
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏–∏ –≤ —à–∞–±–ª–æ–Ω–µ –¥–ª—è AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç
            return self._update_template_versions(template)
        return """<!DOCTYPE html> ... –±–∞–∑–æ–≤—ã–π HTML-—à–∞–±–ª–æ–Ω AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç ... """

    def _generate_target_audience(self, topic: str) -> str:
        """–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¶–ê –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–º—ã (—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–ª—è AI-–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏)."""
        return (
            "–≤–ª–∞–¥–µ–ª—å—Ü—ã –∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –±–∏–∑–Ω–µ—Å–∞, –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∏, IT-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∏ –ª–∏–¥–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤"
        )

    def _generate_keywords(self, topic: str) -> str:
        """–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∏–∑ —Ç–µ–º—ã + –±–∞–∑–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –¥–ª—è AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç."""
        base = re.sub(r"\s+", ", ", topic.strip())
        extra = "AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥–∞–∂, –ª–∏–¥–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è, —á–∞—Ç-–±–æ—Ç, GPT, –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, CRM, Bitrix24"
        return f"{base}, {extra}"

    def _run_full_geo_optimization(self, article_filename: str):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—É—é –ì–ò–ë–†–ò–î–ù–£–Æ GEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é —Å GPT-5."""
        try:
            from geo_hybrid_agent import GEOHybridAgent
            print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –ì–ò–ë–†–ò–î–ù–£–Æ GEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é —Å GPT-5...")
            
            # –°–æ–∑–¥–∞–µ–º –≥–∏–±—Ä–∏–¥–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            hybrid_agent = GEOHybridAgent()
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–∏–±—Ä–∏–¥–Ω—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é (–∞–Ω–∞–ª–∏–∑ + GPT-5 –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ + –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ)
            result = hybrid_agent.run_hybrid_optimization(article_filename)
            
            if result.get("success"):
                print(f"‚úÖ –ì–∏–±—Ä–∏–¥–Ω–∞—è GEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å GPT-5 –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                print(f"üìä SEO score: {result['analysis']['seo_analysis']['score']}%")
                print(f"ü§ñ LLM score: {result['analysis']['llm_analysis']['score']}%")
                print(f"üìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞ score: {result['analysis']['content_analysis']['score']}%")
                print(f"üñº –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è score: {result['analysis']['image_analysis']['score']}%")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã GPT-5 –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                if result.get('gpt_plan', {}).get('success'):
                    gpt_data = result['gpt_plan']['data']
                    print(f"ü§ñ GPT-5 –ø–ª–∞–Ω –ø—Ä–∏–º–µ–Ω–µ–Ω:")
                    print(f"   - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {gpt_data.get('priority', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
                    print(f"   - Meta —É–ª—É—á—à–µ–Ω–∏—è: {'–î–∞' if 'meta_improvements' in gpt_data else '–ù–µ—Ç'}")
                    print(f"   - –ö–æ–Ω—Ç–µ–Ω—Ç —É–ª—É—á—à–µ–Ω–∏—è: {'–î–∞' if 'content_improvements' in gpt_data else '–ù–µ—Ç'}")
                    print(f"   - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É–ª—É—á—à–µ–Ω–∏—è: {'–î–∞' if 'technical_improvements' in gpt_data else '–ù–µ—Ç'}")
                else:
                    print("‚ö†Ô∏è GPT-5 –ø–ª–∞–Ω –Ω–µ –ø–æ–ª—É—á–µ–Ω, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º")
                
                print(f"üìã –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {result['report_path']}")
            else:
                print(f"‚ö†Ô∏è  –ì–∏–±—Ä–∏–¥–Ω–∞—è GEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {result.get('error')}")
                
        except Exception as e:
            print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≥–∏–±—Ä–∏–¥–Ω—É—é GEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é: {str(e)}")
            print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é: python3 geo_hybrid_agent.py <—Å—Ç–∞—Ç—å—è>")

    def create_article_by_topic(self, topic: str) -> dict:
        """–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞—Ç—å—é, –ø—Ä–∏–Ω–∏–º–∞—è —Ç–æ–ª—å–∫–æ —Ç–µ–º—É. –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."""
        print(f"üéØ –°–æ–∑–¥–∞—é —Å—Ç–∞—Ç—å—é –ø–æ —Ç–µ–º–µ: '{topic}'")
        print("üìã –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é: —Ü–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è, –∏–º—è —Ñ–∞–π–ª–∞, –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞")
        print("üöÄ –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –ì–ò–ë–†–ò–î–ù–ê–Ø GEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å GPT-5")
        
        target_audience = self._generate_target_audience(topic)
        filename = self._generate_filename(topic)
        keywords = self._generate_keywords(topic)
        result = self.create_article(topic, target_audience, filename, keywords)
        if result.get("success"):
            # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª–Ω–∞—è GEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è (–≤—Å–µ 14 —à–∞–≥–æ–≤), –∑–∞—Ç–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
            self._run_full_geo_optimization(filename)
            self._run_automation(filename)
        return result

    def _update_template_versions(self, template: str) -> str:
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤–µ—Ä—Å–∏–∏ —Ñ–∞–π–ª–æ–≤ –≤ —à–∞–±–ª–æ–Ω–µ –∏–∑ index.html"""
        try:
            index_path = self.project_root / "index.html"
            if not index_path.exists():
                print("‚ö†Ô∏è  index.html –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏")
                return template
            
            with open(index_path, 'r', encoding='utf-8') as f:
                index_content = f.read()
            
            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–µ—Ä—Å–∏–∏
            css_match = re.search(r'href="/assets/css/styles\.css\?v=(\d+)"', index_content)
            js_match = re.search(r'src="/js/app\.js\?v=(\d+)"', index_content)
            widget_match = re.search(r'src="/js/sv-video-widget\.js\?v=(\d+)"', index_content)
            
            if css_match:
                css_version = css_match.group(1)
                template = re.sub(r'href="/assets/css/styles\.css\?v=\d+"', f'href="/assets/css/styles.css?v={css_version}"', template)
                print(f"üé® CSS –≤–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ v{css_version}")
            
            if js_match:
                js_version = js_match.group(1)
                template = re.sub(r'src="/js/app\.js\?v=\d+"', f'src="/js/app.js?v={js_version}"', template)
                print(f"‚ö° JS –≤–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ v{js_version}")
            
            if widget_match:
                widget_version = widget_match.group(1)
                template = re.sub(r'src="/js/sv-video-widget\.js\?v=\d+"', f'src="/js/sv-video-widget.js?v={widget_version}"', template)
                print(f"üé• –í–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç –≤–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ v{widget_version}")
            
            return template
            
        except Exception as e:
            print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–π: {str(e)}")
            return template

    def _validate_html_structure(self, html_content: str) -> dict:
        """–í–∞–ª–∏–¥–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É HTML —Å—Ç–∞—Ç—å–∏"""
        validation = {
            "success": True,
            "errors": [],
            "warnings": [],
            "checks": {}
        }
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º DOCTYPE
            if not html_content.strip().startswith('<!DOCTYPE html'):
                validation["errors"].append("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç DOCTYPE html")
                validation["success"] = False
            else:
                validation["checks"]["doctype"] = "‚úÖ DOCTYPE html –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–≥–∏
            required_tags = ['<html', '<head', '<title', '<body', '</html>']
            for tag in required_tags:
                if tag not in html_content:
                    validation["errors"].append(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–≥: {tag}")
                    validation["success"] = False
                else:
                    validation["checks"][f"tag_{tag}"] = f"‚úÖ –¢–µ–≥ {tag} –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º H1 –∑–∞–≥–æ–ª–æ–≤–æ–∫
            h1_count = len(re.findall(r'<h1[^>]*>.*?</h1>', html_content, re.DOTALL))
            if h1_count == 0:
                validation["errors"].append("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç H1 –∑–∞–≥–æ–ª–æ–≤–æ–∫")
                validation["success"] = False
            elif h1_count > 1:
                validation["warnings"].append(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {h1_count} H1 –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–∏–Ω)")
            else:
                validation["checks"]["h1"] = "‚úÖ H1 –∑–∞–≥–æ–ª–æ–≤–æ–∫: –æ–¥–∏–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º H2 –∑–∞–≥–æ–ª–æ–≤–∫–∏
            h2_count = len(re.findall(r'<h2[^>]*>.*?</h2>', html_content, re.DOTALL))
            if h2_count < 4:
                validation["warnings"].append(f"‚ö†Ô∏è  H2 –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤: {h2_count} (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 4)")
            else:
                validation["checks"]["h2"] = f"‚úÖ H2 –∑–∞–≥–æ–ª–æ–≤–∫–∏: {h2_count} (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ)"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º FAQ –±–ª–æ–∫
            if re.search(r'<section[^>]*id="faq"[^>]*>', html_content):
                validation["checks"]["faq"] = "‚úÖ FAQ –±–ª–æ–∫ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            else:
                validation["warnings"].append("‚ö†Ô∏è  FAQ –±–ª–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º CTA –±–ª–æ–∫–∏
            cta_count = len(re.findall(r'class="[^"]*cta[^"]*"', html_content))
            if cta_count >= 2:
                validation["checks"]["cta"] = f"‚úÖ CTA –±–ª–æ–∫–∏: {cta_count} (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ)"
            else:
                validation["warnings"].append(f"‚ö†Ô∏è  CTA –±–ª–æ–∫–æ–≤: {cta_count} (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 2)")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç
            if 'sv-video-widget.js' in html_content:
                validation["checks"]["video_widget"] = "‚úÖ –í–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω"
            else:
                validation["warnings"].append("‚ö†Ô∏è  –í–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
            
        except Exception as e:
            validation["errors"].append(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ HTML: {str(e)}")
            validation["success"] = False
        
        return validation

    def _validate_json_ld(self, html_content: str) -> dict:
        """–í–∞–ª–∏–¥–∏—Ä—É–µ—Ç JSON-LD —Å—Ö–µ–º—ã –≤ —Å—Ç–∞—Ç—å–µ"""
        validation = {
            "success": True,
            "errors": [],
            "warnings": [],
            "checks": {}
        }
        
        try:
            # –ò—â–µ–º JSON-LD –±–ª–æ–∫–∏
            json_ld_blocks = re.findall(r'<script type="application/ld\+json">(.*?)</script>', html_content, re.DOTALL)
            
            if not json_ld_blocks:
                validation["errors"].append("‚ùå JSON-LD —Å—Ö–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                validation["success"] = False
                return validation
            
            validation["checks"]["json_ld_count"] = f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(json_ld_blocks)} JSON-LD –±–ª–æ–∫–æ–≤"
            
            for i, block in enumerate(json_ld_blocks):
                try:
                    # –ü–∞—Ä—Å–∏–º JSON
                    json_data = json.loads(block.strip())
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è Article
                    if json_data.get("@type") == "Article":
                        required_fields = ["@context", "@type", "headline", "author", "datePublished"]
                        missing_fields = [field for field in required_fields if field not in json_data]
                        
                        if missing_fields:
                            validation["warnings"].append(f"‚ö†Ô∏è  Article —Å—Ö–µ–º–∞ #{i+1}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {', '.join(missing_fields)}")
                        else:
                            validation["checks"][f"article_{i+1}"] = f"‚úÖ Article —Å—Ö–µ–º–∞ #{i+1}: –≤–∞–ª–∏–¥–Ω–∞"
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è FAQPage
                    elif json_data.get("@type") == "FAQPage":
                        if "mainEntity" not in json_data:
                            validation["errors"].append(f"‚ùå FAQPage —Å—Ö–µ–º–∞ #{i+1}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç mainEntity")
                            validation["success"] = False
                        else:
                            questions = json_data["mainEntity"]
                            if not isinstance(questions, list) or len(questions) < 6:
                                validation["warnings"].append(f"‚ö†Ô∏è  FAQPage —Å—Ö–µ–º–∞ #{i+1}: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤ (–Ω–∞–π–¥–µ–Ω–æ {len(questions) if isinstance(questions, list) else 0})")
                            else:
                                validation["checks"][f"faq_{i+1}"] = f"‚úÖ FAQPage —Å—Ö–µ–º–∞ #{i+1}: {len(questions)} –≤–æ–ø—Ä–æ—Å–æ–≤"
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Organization
                    elif json_data.get("@type") == "Organization":
                        validation["checks"][f"organization_{i+1}"] = f"‚úÖ Organization —Å—Ö–µ–º–∞ #{i+1}: –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
                    
                    else:
                        validation["checks"][f"other_{i+1}"] = f"‚ÑπÔ∏è  –°—Ö–µ–º–∞ #{i+1}: —Ç–∏–ø {json_data.get('@type', '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')}"
                        
                except json.JSONDecodeError as e:
                    validation["errors"].append(f"‚ùå –°—Ö–µ–º–∞ #{i+1}: –æ—à–∏–±–∫–∞ JSON - {str(e)}")
                    validation["success"] = False
                except Exception as e:
                    validation["errors"].append(f"‚ùå –°—Ö–µ–º–∞ #{i+1}: –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ - {str(e)}")
                    validation["success"] = False
            
        except Exception as e:
            validation["errors"].append(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ JSON-LD: {str(e)}")
            validation["success"] = False
        
        return validation

    def create_article(self, topic: str, target_audience: str,
                       article_filename: str, keywords: str = "") -> dict:
        try:
            prompt = f"""
–°–æ–∑–¥–∞–π SEO + GEO/LLMO –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é –¥–ª—è SmartVizitka –Ω–∞ —Ç–µ–º—É: "{topic}"

–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: {target_audience}
–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {keywords or '–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, AI, –Ω–µ–π—Ä–æ—Å–µ—Ç–∏, –±–∏–∑–Ω–µ—Å, CRM'}

## üéØ –¶–ï–õ–ï–í–ê–Ø –ê–£–î–ò–¢–û–†–ò–Ø SMARTVIZITKA:

### **1. –°–µ–≥–º–µ–Ω—Ç—ã –±–∏–∑–Ω–µ—Å–∞:**
‚Ä¢ –°–∞–ª–æ–Ω—ã –∫—Ä–∞—Å–æ—Ç—ã –∏ –±–∞—Ä–±–µ—Ä—à–æ–ø—ã ‚Äî –º–∞—Å—Ç–µ—Ä–∞, —Å—Ç—É–¥–∏–∏ —Å 1‚Äì10 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
‚Ä¢ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∏ –æ–∑–¥–æ—Ä–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ ‚Äî —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–∏, –º–∞—Å—Å–∞–∂–∏—Å—Ç—ã, –∫–ª–∏–Ω–∏–∫–∏
‚Ä¢ –§–∏—Ç–Ω–µ—Å –∏ —Å–ø–æ—Ä—Ç ‚Äî —Ç—Ä–µ–Ω–µ—Ä—ã, –∑–∞–ª—ã, —Å–µ–∫—Ü–∏–∏
‚Ä¢ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—ã ‚Äî —á–∞—Å—Ç–Ω—ã–µ —à–∫–æ–ª—ã, –∫—É—Ä—Å—ã, —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—ã
‚Ä¢ –ë—ã—Ç–æ–≤—ã–µ –∏ —Å–µ—Ä–≤–∏—Å–Ω—ã–µ —É—Å–ª—É–≥–∏ ‚Äî –∞–≤—Ç–æ–º–æ–π–∫–∏, —Ä–µ–º–æ–Ω—Ç, –∫–ª–∏–Ω–∏–Ω–≥, –ø—Ä–æ–∫–∞—Ç
‚Ä¢ –î–æ—Å—É–≥ –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è ‚Äî —Å—Ç—É–¥–∏–∏ —Ç–∞–Ω—Ü–∞, –∫–≤–µ—Å—Ç—ã, –∫—Ä—É–∂–∫–∏

### **2. –†–∞–∑–º–µ—Ä –±–∏–∑–Ω–µ—Å–∞:**
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–∏ –∏ –º–∞–ª—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ (1‚Äì30 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)
‚Ä¢ –ë–µ–∑ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ IT-–æ—Ç–¥–µ–ª–∞, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –±—é–¥–∂–µ—Ç

### **3. –ë–æ–ª–∏ –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ ¬´–ø—É—Å—Ç—ã–µ –æ–∫–Ω–∞¬ª –∏ –Ω–µ—è–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
‚Ä¢ –•–∞–æ—Å –≤ –∑–∞–ø–∏—Å—è—Ö (–±–ª–æ–∫–Ω–æ—Ç, Excel, —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∏)
‚Ä¢ –ù–µ—Ç –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏ –≤ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö –∏ –∑–∞–≥—Ä—É–∑–∫–µ
‚Ä¢ –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –∫–ª–∏–µ–Ω—Ç–æ–≤, –Ω–æ –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥
‚Ä¢ –ñ–µ–ª–∞–Ω–∏–µ —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, –∑–∞–ø—É—Å–∫–∞—Ç—å –∞–∫—Ü–∏–∏ –∏ –±–æ–Ω—É—Å—ã

### **4. –¶–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è:**
‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞: ¬´—á—Ç–æ–±—ã –≤—Å—ë —Ä–∞–±–æ—Ç–∞–ª–æ —Å—Ä–∞–∑—É, –±–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞¬ª
‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: –±–µ—Å–ø–ª–∞—Ç–Ω–æ/–¥–µ—à–µ–≤–æ, –±–µ–∑ –ø–æ–¥–ø–∏—Å–æ–∫
‚Ä¢ –ì–∏–±–∫–æ—Å—Ç—å: –∑–∞–ø–∏—Å–∏ 24/7, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ ¬´–≤ –æ–¥–Ω–æ–º –æ–∫–Ω–µ¬ª
‚Ä¢ –†–æ—Å—Ç –¥–æ—Ö–æ–¥–∞: –±–æ–ª—å—à–µ –∑–∞–ø–∏—Å–µ–π, –º–µ–Ω—å—à–µ –Ω–µ—è–≤–æ–∫, –≤–æ–∑–≤—Ä–∞—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤

### **5. –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ WhatsApp, Instagram, Telegram
‚Ä¢ –†–µ—à–∞—é—Ç –≤–æ–ø—Ä–æ—Å—ã –±—ã—Å—Ç—Ä–æ (–±–µ–∑ –¥–æ–ª–≥–æ–≥–æ —á—Ç–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π)
‚Ä¢ –ì–æ—Ç–æ–≤—ã –ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ, –µ—Å–ª–∏ ¬´–±–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –±–µ–∑ —Ä–∏—Å–∫–∞¬ª

**–ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ—á–Ω–æ –ø–æ–ø–∞–¥–µ—Ç –≤ –±–æ–ª–∏ –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏!**

**üéØ –ì–õ–ê–í–ù–û–ï –ü–†–ê–í–ò–õ–û: –°—Ç–∞—Ç—å—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ü–û–õ–ï–ó–ù–û–ô –¥–ª—è —á–∏—Ç–∞—Ç–µ–ª—è - –¥–∞–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞–Ω–∏—è, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ SmartVizitka. –ß–∏—Ç–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å –æ—Ç –ø—Ä–æ—á—Ç–µ–Ω–∏—è!**

–ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç–æ—Ç HTML-—à–∞–±–ª–æ–Ω –∏ –∑–∞–º–µ–Ω–∏ –≤—Å–µ –∑–∞–≥–ª—É—à–∫–∏:

{self.article_template}

**‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –í —à–∞–±–ª–æ–Ω–µ –µ—Å—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞. –°–õ–ï–î–£–ô –ò–ú –°–¢–†–û–ì–û!**
**–ö–∞–∂–¥—ã–π —Ä–∞–∑–¥–µ–ª –¥–æ–ª–∂–µ–Ω –¥–∞–≤–∞—Ç—å —á–∏—Ç–∞—Ç–µ–ª—é –†–ï–ê–õ–¨–ù–£–Æ –ü–û–õ–¨–ó–£, –∞ –Ω–µ –±—ã—Ç—å —Ä–µ–∫–ª–∞–º–æ–π SmartVizitka!**

## üéØ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:

### **1. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:**
- **4 —Ä–∞–∑–¥–µ–ª–∞ (H2)** —Å —á–µ—Ç–∫–æ–π –ª–æ–≥–∏–∫–æ–π
- **FAQ –±–ª–æ–∫** —Å 6 –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏
- **–ö–∞–∂–¥—ã–π —Ä–∞–∑–¥–µ–ª** –¥–æ–ª–∂–µ–Ω —Å–ª–µ–¥–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–µ: –ë–û–õ–¨ ‚Üí –†–ï–®–ï–ù–ò–ï ‚Üí –†–ï–ó–£–õ–¨–¢–ê–¢ ‚Üí –¶–ï–ù–ù–û–°–¢–¨ (–æ–ø–∏—Å—ã–≤–∞—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –±–µ–∑ —è–≤–Ω—ã—Ö —Å–ª–æ–≤ "–±–æ–ª—å", "—Ä–µ—à–µ–Ω–∏–µ", "—Ä–µ–∑—É–ª—å—Ç–∞—Ç")

### **2. –ú–µ—Ç–∞-—Ç–µ–≥–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):**
- Title: "{topic} - SmartVizitka" (60-70 —Å–∏–º–≤–æ–ª–æ–≤)
- Description: SEO-–æ–ø–∏—Å–∞–Ω–∏–µ (150-160 —Å–∏–º–≤–æ–ª–æ–≤)
- Keywords: –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
- Author: SmartVizitka
- Robots: index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1
- Canonical: —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é
- OpenGraph: title, description, type=article, image, url, locale, site_name, article:published_time, article:modified_time, article:author, article:section, article:tag
- Twitter: card=summary_large_image, site, creator, title, description, image

### **3. JSON-LD —Å—Ö–µ–º—ã (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):**
- **Article**: headline, description, image, keywords, author, publisher, datePublished, dateModified, articleSection, articleBody
- **WebSite**: name, url, description, potentialAction (SearchAction)
- **BreadcrumbList**: itemListElement —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π (–ì–ª–∞–≤–Ω–∞—è ‚Üí –°—Ç–∞—Ç—å–∏ ‚Üí [–¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏])
- **FAQPage**: mainEntity —Å 6 –≤–æ–ø—Ä–æ—Å–∞–º–∏

### **4. CTA –±–ª–æ–∫–∏:**
- **–ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞** (4 CTA)
- **–ì–ª–∞–≤–Ω—ã–π CTA –≤ –∫–æ–Ω—Ü–µ** —Å—Ç–∞—Ç—å–∏
- **–í—Å–µ —Å—Å—ã–ª–∫–∏** –≤–µ–¥—É—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (/)

### **5. SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è:**
- –ò—Å–ø–æ–ª—å–∑—É–π –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤ **H1, H2 –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö**
- **H1** - —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
- **H2** - –º–∏–Ω–∏–º—É–º 4, –º–∞–∫—Å–∏–º—É–º 6
- **–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å—Å—ã–ª–∫–∏** –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É

### **6. –ö–æ–Ω—Ç–µ–Ω—Ç:**
- **–†–∞–∑–¥–µ–ª 1**: –ü—Ä–æ–±–ª–µ–º—ã –∏ –±–æ–ª–∏ —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏ (–æ–ø–∏—Å—ã–≤–∞—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ, –±–µ–∑ —è–≤–Ω—ã—Ö —Å–ª–æ–≤ "–±–æ–ª—å", "—Ä–µ—à–µ–Ω–∏–µ", "—Ä–µ–∑—É–ª—å—Ç–∞—Ç")
- **–†–∞–∑–¥–µ–ª 2**: –ö–∞–∫ AI-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Ä–µ—à–∞—é—Ç —ç—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã (–æ–ø–∏—Å—ã–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏)
- **–†–∞–∑–¥–µ–ª 3**: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ (—Ü–∏—Ñ—Ä—ã, –∫–µ–π—Å—ã, –º–µ—Ç—Ä–∏–∫–∏)
- **–†–∞–∑–¥–µ–ª 4**: –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ (–ø–æ—à–∞–≥–æ–≤–æ, —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏)

### **7. FAQ –≤–æ–ø—Ä–æ—Å—ã (–¥–ª—è LLM –ø–æ–∏—Å–∫–∞):**
- **–í–æ–ø—Ä–æ—Å 1**: –ß—Ç–æ —Ç–∞–∫–æ–µ [—Ç–µ–º–∞ —Å—Ç–∞—Ç—å–∏] –¥–ª—è –±–∏–∑–Ω–µ—Å–∞?
- **–í–æ–ø—Ä–æ—Å 2**: –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç [—Ç–µ–º–∞ —Å—Ç–∞—Ç—å–∏] –≤ [–æ—Ç—Ä–∞—Å–ª–∏]?
- **–í–æ–ø—Ä–æ—Å 3**: –ö–∞–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ [—Ç–µ–º—ã —Å—Ç–∞—Ç—å–∏] –ø–µ—Ä–µ–¥ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏?
- **–í–æ–ø—Ä–æ—Å 4**: –°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ [—Ç–µ–º—ã —Å—Ç–∞—Ç—å–∏]?
- **–í–æ–ø—Ä–æ—Å 5**: –ö–∞–∫ –≤–Ω–µ–¥—Ä–∏—Ç—å [—Ç–µ–º—É —Å—Ç–∞—Ç—å–∏] –≤ –±–∏–∑–Ω–µ—Å?
- **–í–æ–ø—Ä–æ—Å 6**: –ï—Å—Ç—å –ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ [—Ç–µ–º—ã —Å—Ç–∞—Ç—å–∏]?

**–í–ê–ñ–ù–û:** FAQ –≤–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤ –æ—Ç–≤–µ—Ç—ã LLM –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

### **8. –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û):**
- **–°—Ç–∞—Ç—å—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ò–ù–§–û–†–ú–ê–¢–ò–í–ù–û–ô** - –¥–∞–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞–Ω–∏—è, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ —Ä–µ–∫–ª–∞–º—É
- **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–ª—å–∑–∞** - —á–∏—Ç–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ
- **–ù–ï –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—Ä—è–º–æ–π —Ä–µ–∫–ª–∞–º—ã SmartVizitka** - —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º
- **–û–±—ä–µ–∫—Ç–∏–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è** - —á–µ—Å—Ç–Ω–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö
- **–ö–µ–π—Å—ã –∏ –ø—Ä–∏–º–µ—Ä—ã** - —Ä–µ–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
- **–ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏** - –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å
- **–≠–∫—Å–ø–µ—Ä—Ç–Ω–æ–µ –º–Ω–µ–Ω–∏–µ** - –≥–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ç–µ–º—ã, –∞ –Ω–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

## ‚ö†Ô∏è –í–ê–ñ–ù–û:
- –í–µ—Ä–Ω–∏ –ü–û–õ–ù–´–ô HTML-–∫–æ–¥ –æ—Ç <!DOCTYPE html> –¥–æ </html>
- –ù–ï –∏–∑–º–µ–Ω—è–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É —à–∞–±–ª–æ–Ω–∞
- –ó–∞–º–µ–Ω–∏ –í–°–ï –∑–∞–≥–ª—É—à–∫–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –≤–∫–ª—é—á–∞—è:
  * –ó–ê–ì–û–õ–û–í–û–ö_–°–¢–ê–¢–¨–ò
  * –û–ü–ò–°–ê–ù–ò–ï_–°–¢–ê–¢–¨–ò
  * –ö–õ–Æ–ß–ï–í–´–ï_–°–õ–û–í–ê_–°–¢–ê–¢–¨–ò
  * –ù–ê–ó–í–ê–ù–ò–ï_–§–ê–ô–õ–ê
  * –°–û–î–ï–†–ñ–ò–ú–û–ï_–°–¢–ê–¢–¨–ò_–î–õ–Ø_JSON_LD
- –°–æ—Ö—Ä–∞–Ω–∏ –≤—Å–µ CSS –∫–ª–∞—Å—Å—ã –∏ –∞—Ç—Ä–∏–±—É—Ç—ã
- –í–∏–¥–µ–æ-–≤–∏–¥–∂–µ—Ç —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω - –ù–ï —Ç—Ä–æ–≥–∞–π –µ–≥–æ
- –í—Å–µ –¥–∞—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO 8601: 2025-01-01T00:00:00+03:00
"""

            # Responses API: messages ‚Üí input
            msgs = [
                {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é SEO + GEO/LLMO –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö HTML-—Å—Ç–∞—Ç–µ–π. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ, –≤–∞–ª–∏–¥–Ω—ã–µ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π, –º–µ—Ç–∞-—Ç–µ–≥–∞–º–∏ –∏ JSON-LD —Å—Ö–µ–º–∞–º–∏. –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: —Å—Ç–∞—Ç—å–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ò–ù–§–û–†–ú–ê–¢–ò–í–ù–´–ú–ò –∏ –¥–∞–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫—É—é –ø–æ–ª—å–∑—É —á–∏—Ç–∞—Ç–µ–ª—é, –∞ –Ω–µ –±—ã—Ç—å –ø—Ä—è–º–æ–π —Ä–µ–∫–ª–∞–º–æ–π. –û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –≤–∞–ª–∏–¥–Ω—ã–º HTML-–∫–æ–¥–æ–º, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π."},
                {"role": "user", "content": prompt},
            ]

            print(f"üîß –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏ {self.MODEL}...")
            
            resp = self.client.responses.create(
                model=self.MODEL,
                input=msgs,
                # max_output_tokens —É–±—Ä–∞–Ω - –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
            )
            
            print(f"üîß –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
            if not hasattr(resp, 'output_text') or not resp.output_text:
                return {
                    "success": False,
                    "error": "GPT –Ω–µ –≤–µ—Ä–Ω—É–ª —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏",
                    "message": "–û—à–∏–±–∫–∞: GPT –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ"
                }

            article_content = resp.output_text

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ HTML
            if not article_content.strip().startswith('<!DOCTYPE html'):
                return {
                    "success": False,
                    "error": "GPT –≤–µ—Ä–Ω—É–ª –Ω–µ HTML",
                    "message": "–û—à–∏–±–∫–∞: GPT –≤–µ—Ä–Ω—É–ª –Ω–µ HTML-–∫–æ–¥"
                }

            # –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é
            print("üîç –í—ã–ø–æ–ª–Ω—è—é –≤–∞–ª–∏–¥–∞—Ü–∏—é —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Å—Ç–∞—Ç—å–∏...")
            
            html_validation = self._validate_html_structure(article_content)
            json_ld_validation = self._validate_json_ld(article_content)
            
            # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏
            print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ HTML:")
            for check in html_validation["checks"].values():
                print(f"   {check}")
            
            if html_validation["warnings"]:
                print("\n‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è HTML:")
                for warning in html_validation["warnings"]:
                    print(f"   {warning}")
            
            if html_validation["errors"]:
                print("\n‚ùå –û—à–∏–±–∫–∏ HTML:")
                for error in html_validation["errors"]:
                    print(f"   {error}")
            
            print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ JSON-LD:")
            for check in json_ld_validation["checks"].values():
                print(f"   {check}")
            
            if json_ld_validation["warnings"]:
                print("\n‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è JSON-LD:")
                for warning in json_ld_validation["warnings"]:
                    print(f"   {warning}")
            
            if json_ld_validation["errors"]:
                print("\n‚ùå –û—à–∏–±–∫–∏ JSON-LD:")
                for error in json_ld_validation["errors"]:
                    print(f"   {error}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
            overall_success = html_validation["success"] and json_ld_validation["success"]
            
            if not overall_success:
                print("\n‚ö†Ô∏è  –°—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ –µ—Å—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏!")
                print("   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π.")
            else:
                print("\n‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –°—Ç–∞—Ç—å—è –≥–æ—Ç–æ–≤–∞ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º
            article_path = self.project_root / article_filename
            article_path.write_text(article_content, encoding="utf-8")

            return {
                "success": True,
                "filename": article_filename,
                "path": str(article_path),
                "message": f"–°—Ç–∞—Ç—å—è '{topic}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {article_filename}",
            }

        except Exception as e:
            return {
                "success": False,
                "error": str(e),
                "message": f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∞—Ç—å–∏: {str(e)}"
            }

    def _generate_filename(self, topic: str) -> str:
        # –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è RU ‚Üí –ª–∞—Ç–∏–Ω–∏—Ü–∞ + —Å–ª–∞–≥
        ru = "–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—å—ã—ä—ç—é—è"
        tr = ["a","b","v","g","d","e","e","zh","z","i","y","k","l","m","n","o","p","r","s","t","u","f","h","c","ch","sh","sch","","","e","yu","ya"]
        mapping = {ru[i]: tr[i] for i in range(len(tr))}
        def translit(s: str) -> str:
            out = []
            for ch in s.lower():
                if ch in mapping:
                    out.append(mapping[ch])
                elif ch.isalnum() or ch in [' ', '-', '_']:
                    out.append(ch)
                else:
                    out.append(' ')
            return ''.join(out)
        base = translit(topic)
        base = re.sub(r'\s+', '-', base)
        base = re.sub(r'[^a-z0-9\-]', '', base).strip('-')
        if not base:
            from datetime import datetime
            base = 'article-' + datetime.now().strftime('%Y%m%d-%H%M')
        if not base.endswith('.html'):
            base += '.html'
        return base

    def run_interactive(self):
        """
        –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –∞–≥–µ–Ω—Ç–∞ –¥–ª—è AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç
        """
        print("ü§ñ AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç Article Agent")
        print("=" * 50)
        print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ SEO + GEO/LLMO –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π")
        print("–¢–µ–º–∞—Ç–∏–∫–∞: AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã, —á–∞—Ç-–±–æ—Ç—ã, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥–∞–∂")
        print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç GPT-5 —Å Responses API")
        print("=" * 50)
        
        while True:
            print("\nüìù –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞—Ç—å–∏:")
            topic = input("üéØ –¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏: ").strip()
            if not topic:
                print("‚ùå –¢–µ–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π!")
                continue
            print(f"\nüöÄ –°–æ–∑–¥–∞—é —Å—Ç–∞—Ç—å—é '{topic}' –ø–æ –æ–¥–Ω–æ–π —Ç–µ–º–µ (–æ—Å—Ç–∞–ª—å–Ω–æ–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)...")
            print("‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 1-2 –º–∏–Ω—É—Ç—ã...")
            result = self.create_article_by_topic(topic)
            if result.get("success"):
                print(f"‚úÖ {result['message']}")
            else:
                print(f"‚ùå {result.get('message') or result.get('error')}")
            continue_confirm = input("\nüîÑ –°–æ–∑–¥–∞—Ç—å –µ—â–µ –æ–¥–Ω—É —Å—Ç–∞—Ç—å—é? (y/n): ").strip().lower()
            if continue_confirm != 'y':
                break
        
        print("\nüéâ –†–∞–±–æ—Ç–∞ –∞–≥–µ–Ω—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

    def _run_automation(self, article_filename: str):
        """
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ (–ø–æ—Å–ª–µ GEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏)
        """
        try:
            print("üîÑ –ó–∞–ø—É—Å–∫–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
            
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é
            from auto_article_updater import ArticleUpdater
            
            updater = ArticleUpdater()
            updater.update_all_files(article_filename)
            
            print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏: {str(e)}")
            print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é: python3 auto_article_updater.py <—Å—Ç–∞—Ç—å—è>")

    def test_agent_functionality(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞"""
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∞–≥–µ–Ω—Ç–∞...")
        print("=" * 50)
        
        test_results = {
            "template_loading": False,
            "version_updating": False,
            "html_validation": False,
            "json_ld_validation": False
        }
        
        try:
            # –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–∞
            print("1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É—é –∑–∞–≥—Ä—É–∑–∫—É —à–∞–±–ª–æ–Ω–∞...")
            template = self._load_article_template()
            if template and "<!DOCTYPE html>" in template:
                test_results["template_loading"] = True
                print("   ‚úÖ –®–∞–±–ª–æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            else:
                print("   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–∞")
            
            # –¢–µ—Å—Ç 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π
            print("2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π...")
            updated_template = self._update_template_versions(template)
            if updated_template != template:
                test_results["version_updating"] = True
                print("   ‚úÖ –í–µ—Ä—Å–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            else:
                print("   ‚ö†Ô∏è  –í–µ—Ä—Å–∏–∏ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã)")
            
            # –¢–µ—Å—Ç 3: –í–∞–ª–∏–¥–∞—Ü–∏—è HTML
            print("3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é HTML...")
            html_validation = self._validate_html_structure(template)
            if html_validation["success"]:
                test_results["html_validation"] = True
                print("   ‚úÖ HTML –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞")
            else:
                print(f"   ‚ùå HTML –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞: {len(html_validation['errors'])} –æ—à–∏–±–æ–∫")
            
            # –¢–µ—Å—Ç 4: –í–∞–ª–∏–¥–∞—Ü–∏—è JSON-LD
            print("4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é JSON-LD...")
            json_ld_validation = self._validate_json_ld(template)
            if json_ld_validation["success"]:
                test_results["json_ld_validation"] = True
                print("   ‚úÖ JSON-LD –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞")
            else:
                print(f"   ‚ùå JSON-LD –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞: {len(json_ld_validation['errors'])} –æ—à–∏–±–æ–∫")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {str(e)}")
        
        # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("=" * 50)
        
        passed_tests = sum(test_results.values())
        total_tests = len(test_results)
        
        for test_name, result in test_results.items():
            status = "‚úÖ –ü–†–û–®–ï–õ" if result else "‚ùå –ù–ï –ü–†–û–®–ï–õ"
            print(f"   {test_name}: {status}")
        
        print(f"\nüéØ –ò—Ç–æ–≥–æ: {passed_tests}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
        
        if passed_tests == total_tests:
            print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ê–≥–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
            return True
        else:
            print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
            return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç"""
    print("üöÄ AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç Article Agent")
    print("üìÅ –†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞:", os.getcwd())
    print("üìã –®–∞–±–ª–æ–Ω:", "AI_ARTICLE_TEMPLATE.html")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    agent = ArticleAgent()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    import sys
    if len(sys.argv) > 1:
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if sys.argv[1] == "test":
            print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞...")
            agent.test_agent_functionality()
            return
        
        # –†–µ–∂–∏–º –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (–ø–æ–¥–¥–µ—Ä–∂–∫–∞: 1 –∞—Ä–≥—É–º–µ–Ω—Ç ‚Äî —Ç–æ–ª—å–∫–æ —Ç–µ–º–∞; —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç ‚Äî 3+ –∞—Ä–≥—É–º–µ–Ω—Ç–∞)
        if len(sys.argv) == 2:
            topic = sys.argv[1]
            print(f"üöÄ –°–æ–∑–¥–∞—é —Å—Ç–∞—Ç—å—é –ø–æ —Ç–µ–º–µ (single-arg): '{topic}'...")
            result = agent.create_article_by_topic(topic)
            if result.get("success"):
                print(f"‚úÖ {result['message']}")
            else:
                print(f"‚ùå {result.get('message') or result.get('error')}")
        elif len(sys.argv) >= 4:
            topic = sys.argv[1]
            target_audience = sys.argv[2]
            filename = sys.argv[3]
            keywords = sys.argv[4] if len(sys.argv) > 4 else ""
            
            print(f"üöÄ –°–æ–∑–¥–∞—é —Å—Ç–∞—Ç—å—é '{topic}'...")
            result = agent.create_article(topic, target_audience, filename, keywords)
            
            if result["success"]:
                print(f"‚úÖ {result['message']}")
                
                # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª–Ω–∞—è GEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è (–≤—Å–µ 14 —à–∞–≥–æ–≤), –∑–∞—Ç–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
                print("üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞—é –ø–æ–ª–Ω—É—é GEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é (–≤—Å–µ 14 —à–∞–≥–æ–≤)...")
                agent._run_full_geo_optimization(filename)
                
                print("üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...")
                agent._run_automation(filename)
            else:
                print(f"‚ùå {result['message']}")
        else:
            print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
            print("   python article_agent.py '–¢–µ–º–∞'                             # –Ω–æ–≤—ã–π —Ä–µ–∂–∏–º: —Ç–æ–ª—å–∫–æ —Ç–µ–º–∞")
            print("   python article_agent.py '–¢–µ–º–∞' '–ê—É–¥–∏—Ç–æ—Ä–∏—è' 'filename.html' [–∫–ª—é—á–µ–≤—ã–µ_—Å–ª–æ–≤–∞]")
            print("   python article_agent.py test  # –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            print("")
            print("üí° –ü—Ä–∏–º–µ—Ä—ã —Ç–µ–º –¥–ª—è AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç:")
            print("   python article_agent.py '–ß–∞—Ç-–±–æ—Ç –¥–ª—è –±–∏–∑–Ω–µ—Å–∞'")
            print("   python article_agent.py '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ GPT –¥–ª—è –±–∏–∑–Ω–µ—Å–∞'")
            print("   python article_agent.py '–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞'")
    else:
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        agent.run_interactive()

if __name__ == "__main__":
    main()
