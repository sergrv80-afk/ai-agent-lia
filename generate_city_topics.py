#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ 100 —Ç–µ–º —Å –≥–æ—Ä–æ–¥–∞–º–∏ –¥–ª—è AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç
–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Ç–µ–º—ã, –¥–æ–±–∞–≤–ª—è—è –∫ –∫–∞–∂–¥–æ–π —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç–µ–º–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
"""

import csv
import os
from pathlib import Path

def generate_city_topics():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–º—ã: 100 –±–∞–∑–æ–≤—ã—Ö + 100 —Ç–µ–º —Å –∫–∞–∂–¥—ã–º –∏–∑ 15 –≥–æ—Ä–æ–¥–æ–≤"""
    
    # –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ (15 –æ—Å–Ω–æ–≤–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤)
    cities = [
        "–ú–æ—Å–∫–≤–∞",
        "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", 
        "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
        "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
        "–ö–∞–∑–∞–Ω—å",
        "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥",
        "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫",
        "–ß–µ–ª—è–±–∏–Ω—Å–∫",
        "–°–∞–º–∞—Ä–∞",
        "–£—Ñ–∞",
        "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É",
        "–û–º—Å–∫",
        "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä",
        "–í–æ—Ä–æ–Ω–µ–∂",
        "–ü–µ—Ä–º—å",
        "–í–æ–ª–≥–æ–≥—Ä–∞–¥"
    ]
    
    # –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–º—ã
    input_file = "100-tem-dlya-statey.csv"
    output_file = "100-tem-s-gorodami.csv"
    
    if not os.path.exists(input_file):
        print(f"‚ùå –§–∞–π–ª {input_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    topics = []
    
    # –ß–∏—Ç–∞–µ–º CSV —Ñ–∞–π–ª
    with open(input_file, 'r', encoding='utf-8') as f:
        reader = csv.DictReader(f)
        for row in reader:
            if row['–¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏']:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–º–∞ –Ω–µ –ø—É—Å—Ç–∞—è
                topics.append(row['–¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏'])
    
    print(f"üìö –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(topics)} —Ç–µ–º –∏–∑ —Ñ–∞–π–ª–∞ {input_file}")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–µ–º—ã: –±–∞–∑–æ–≤—ã–µ + —Å –≥–æ—Ä–æ–¥–∞–º–∏
    all_topics = []
    
    # 1. –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º 100 –±–∞–∑–æ–≤—ã—Ö —Ç–µ–º (–±–µ–∑ –≥–æ—Ä–æ–¥–æ–≤)
    for i, topic in enumerate(topics):
        all_topics.append({
            '‚Ññ': i + 1,
            '–¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏': topic,
            '–ì–æ—Ä–æ–¥': '–ë–µ–∑ –≥–æ—Ä–æ–¥–∞',
            '–ë–∞–∑–æ–≤–∞—è —Ç–µ–º–∞': topic
        })
    
    # 2. –ü–æ—Ç–æ–º –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–º—ã —Å –∫–∞–∂–¥—ã–º –≥–æ—Ä–æ–¥–æ–º
    topic_counter = len(topics) + 1
    
    for city in cities:
        for i, topic in enumerate(topics):
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–µ–º—É —Å –≥–æ—Ä–æ–¥–æ–º
            if "–≤ –†–æ—Å—Å–∏–∏" in topic:
                # –ó–∞–º–µ–Ω—è–µ–º "–≤ –†–æ—Å—Å–∏–∏" –Ω–∞ –≥–æ—Ä–æ–¥
                new_topic = topic.replace("–≤ –†–æ—Å—Å–∏–∏", f"–≤ {city}")
            elif "–º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞" in topic:
                # –î–æ–±–∞–≤–ª—è–µ–º –≥–æ—Ä–æ–¥ –∫ "–º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞"
                new_topic = topic.replace("–º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞", f"–º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –≤ {city}")
            elif "–º–∞–ª–æ–º –±–∏–∑–Ω–µ—Å–µ" in topic:
                # –î–æ–±–∞–≤–ª—è–µ–º –≥–æ—Ä–æ–¥ –∫ "–º–∞–ª–æ–º –±–∏–∑–Ω–µ—Å–µ"
                new_topic = topic.replace("–º–∞–ª–æ–º –±–∏–∑–Ω–µ—Å–µ", f"–º–∞–ª–æ–º –±–∏–∑–Ω–µ—Å–µ –≤ {city}")
            elif "–º–∏–∫—Ä–æ–±–∏–∑–Ω–µ—Å" in topic:
                # –î–æ–±–∞–≤–ª—è–µ–º –≥–æ—Ä–æ–¥ –∫ "–º–∏–∫—Ä–æ–±–∏–∑–Ω–µ—Å"
                new_topic = topic.replace("–º–∏–∫—Ä–æ–±–∏–∑–Ω–µ—Å", f"–º–∏–∫—Ä–æ–±–∏–∑–Ω–µ—Å –≤ {city}")
            else:
                # –î–æ–±–∞–≤–ª—è–µ–º –≥–æ—Ä–æ–¥ –≤ –∫–æ–Ω–µ—Ü —Ç–µ–º—ã
                new_topic = f"{topic} –≤ {city}"
            
            all_topics.append({
                '‚Ññ': topic_counter,
                '–¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏': new_topic,
                '–ì–æ—Ä–æ–¥': city,
                '–ë–∞–∑–æ–≤–∞—è —Ç–µ–º–∞': topic
            })
            topic_counter += 1
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –Ω–æ–≤—ã–π CSV —Ñ–∞–π–ª
    with open(output_file, 'w', encoding='utf-8', newline='') as f:
        fieldnames = ['‚Ññ', '–¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏', '–ì–æ—Ä–æ–¥', '–ë–∞–∑–æ–≤–∞—è —Ç–µ–º–∞']
        writer = csv.DictWriter(f, fieldnames=fieldnames)
        
        writer.writeheader()
        for topic_data in all_topics:
            writer.writerow(topic_data)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(all_topics)} —Ç–µ–º –≤—Å–µ–≥–æ")
    print(f"üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞:")
    print(f"   ‚Ä¢ 100 –±–∞–∑–æ–≤—ã—Ö —Ç–µ–º (–±–µ–∑ –≥–æ—Ä–æ–¥–æ–≤)")
    print(f"   ‚Ä¢ {len(cities)} –≥–æ—Ä–æ–¥–æ–≤ √ó 100 —Ç–µ–º = {len(cities) * 100} —Ç–µ–º —Å –≥–æ—Ä–æ–¥–∞–º–∏")
    print(f"   ‚Ä¢ –ò—Ç–æ–≥–æ: {len(all_topics)} —Ç–µ–º")
    print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {output_file}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    print("\nüéØ –ü—Ä–∏–º–µ—Ä—ã –±–∞–∑–æ–≤—ã—Ö —Ç–µ–º:")
    for i, topic_data in enumerate(all_topics[:3]):
        print(f"{i+1}. {topic_data['–¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏']}")
    
    print("\nüèô –ü—Ä–∏–º–µ—Ä—ã —Ç–µ–º —Å –≥–æ—Ä–æ–¥–∞–º–∏:")
    for i, topic_data in enumerate(all_topics[100:103]):
        print(f"{i+101}. {topic_data['–¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏']}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥–æ—Ä–æ–¥–∞–º
    city_count = {}
    for topic_data in all_topics:
        city = topic_data['–ì–æ—Ä–æ–¥']
        city_count[city] = city_count.get(city, 0) + 1
    
    print(f"\nüèô –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥–æ—Ä–æ–¥–∞–º:")
    print(f"   –ë–µ–∑ –≥–æ—Ä–æ–¥–∞: {city_count.get('–ë–µ–∑ –≥–æ—Ä–æ–¥–∞', 0)} —Ç–µ–º")
    for city in cities[:5]:
        if city in city_count:
            print(f"   {city}: {city_count[city]} —Ç–µ–º")
    print(f"   ... –∏ –µ—â–µ {len(cities) - 5} –≥–æ—Ä–æ–¥–æ–≤")
    
    return all_topics

def create_ai_business_csv(all_topics):
    """–°–æ–∑–¥–∞–µ—Ç CSV —Ñ–∞–π–ª –¥–ª—è AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–æ –≤—Å–µ–º–∏ —Ç–µ–º–∞–º–∏"""
    
    output_file = "ai_business_3themes.csv"
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π CSV —Ç–æ–ª—å–∫–æ —Å —Ç–µ–º–∞–º–∏ (—Ñ–æ—Ä–º–∞—Ç –¥–ª—è AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç)
    with open(output_file, 'w', encoding='utf-8', newline='') as f:
        fieldnames = ['–¢–µ–º–∞']
        writer = csv.DictWriter(f, fieldnames=fieldnames)
        
        writer.writeheader()
        for topic_data in all_topics:
            writer.writerow({'–¢–µ–º–∞': topic_data['–¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏']})
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –¥–ª—è AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç: {output_file}")
    print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–º: {len(all_topics)}")
    print(f"üìù –§–æ—Ä–º–∞—Ç: –≥–æ—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π")
    print(f"üéØ –°—Ç—Ä—É–∫—Ç—É—Ä–∞: 100 –±–∞–∑–æ–≤—ã—Ö + {len(all_topics) - 100} —Å –≥–æ—Ä–æ–¥–∞–º–∏")

if __name__ == "__main__":
    print("üöÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–º —Å –≥–æ—Ä–æ–¥–∞–º–∏ –¥–ª—è AI-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç")
    print("=" * 60)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–º—ã
    all_topics = generate_city_topics()
    
    if all_topics:
        # –°–æ–∑–¥–∞–µ–º CSV –¥–ª—è AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç
        create_ai_business_csv(all_topics)
        
        print("\nüéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("üìã –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã:")
        print("   ‚Ä¢ 100-tem-s-gorodami.csv - –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ (–±–∞–∑–æ–≤—ã–µ + —Å –≥–æ—Ä–æ–¥–∞–º–∏)")
        print("   ‚Ä¢ ai_business_3themes.csv - –≥–æ—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π")
        
        print("\nüí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ:")
        print("   1. –§–∞–π–ª ai_business_3themes.csv —Å–æ–¥–µ—Ä–∂–∏—Ç –í–°–ï —Ç–µ–º—ã!")
        print("   2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å—Ç–∞—Ç–µ–π —Å –Ω–æ–≤—ã–º–∏ —Ç–µ–º–∞–º–∏")
        print("   3. –ü–æ–ª—É—á–∏—Ç—å 1,600 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π!")
        print("   4. –ù–∞—á–∞—Ç—å —Å –±–∞–∑–æ–≤—ã—Ö —Ç–µ–º, –ø–æ—Ç–æ–º –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ç–µ–º–∞–º —Å –≥–æ—Ä–æ–¥–∞–º–∏")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–º")
